# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.vm.box_version = "20240319.0.0"

  # Configurazione SSH globale
  config.ssh.insert_key = false
  config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "~/.ssh/id_rsa"]
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"

  # Manager node
  config.vm.define "k8s-manager" do |manager|
    manager.vm.hostname = "k8s-manager"
    manager.vm.network "private_network", ip: "192.168.56.10"
    manager.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
      vb.name = "k8s-manager"
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
  end

  # Worker nodes
  (1..2).each do |i|
    config.vm.define "k8s-worker-#{i}" do |worker|
      worker.vm.hostname = "k8s-worker-#{i}"
      worker.vm.network "private_network", ip: "192.168.56.#{10 + i}"
      worker.vm.provider "virtualbox" do |vb|
        vb.memory = "2048"
        vb.cpus = 2
        vb.name = "k8s-worker-#{i}"
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      end
    end
  end

  # Provisioning comune per tutte le VM
  config.vm.provision "shell", inline: <<-SHELL
    # Fix dpkg-preconfigure error
    export DEBIAN_FRONTEND=noninteractive
    
    # Update system packages
    apt-get update
    
    # Install essential packages
    apt-get install -y python3 python3-pip openssh-server curl wget
    
    # Configure SSH
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    systemctl restart ssh
    systemctl enable ssh
    
    # Create ansible user with sudo privileges
    useradd -m -s /bin/bash ansible || true
    echo 'ansible:ansible' | chpasswd
    usermod -aG sudo ansible
    echo 'ansible ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    
    # Setup SSH directory for ansible user
    mkdir -p /home/ansible/.ssh
    chmod 700 /home/ansible/.ssh
    chown ansible:ansible /home/ansible/.ssh
    
    # Copy vagrant's authorized_keys to ansible user
    cp /home/vagrant/.ssh/authorized_keys /home/ansible/.ssh/ || true
    chown ansible:ansible /home/ansible/.ssh/authorized_keys || true
    chmod 600 /home/ansible/.ssh/authorized_keys || true
    
    # Allow password authentication temporarily for setup
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
    systemctl restart ssh
    
    echo "VM provisioning completed successfully"
  SHELL
end
